# Default values for spc-analysis-tool Helm chart.
# Environment-agnostic defaults; override in values-<env>.yaml or via Kustomize overlays.

image:
  repository: ghcr.io/your-org/spc-analysis-tool
  tag: "0.1.0" # Immutable tag RECOMMENDED to be replaced with digest in prod (e.g., sha256:...)
  pullPolicy: IfNotPresent

imagePullSecrets: [] # e.g., [{ name: regcred }]

replicaCount: 2

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""
  annotations: {}

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9113" # if using nginx exporter sidecar
  prometheus.io/path: "/metrics"

podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 101
  runAsGroup: 101
  fsGroup: 101
  seccompProfile:
    type: RuntimeDefault

securityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: spc.local
      paths:
        - path: /
          pathType: Prefix
  tls: [] # [{ hosts: [spc.local], secretName: spc-tls }]

resources:
  limits:
    cpu: 200m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 60
  # targetMemoryUtilizationPercentage: 70 # optional

pdb:
  enabled: true
  minAvailable: 1

networkPolicy:
  enabled: true
  allowedEgressCIDRs: [] # e.g., ["0.0.0.0/0"] if external APIs needed
  allowDNS: true

config:
  enabled: true
  data:
    runtime-config.js: |
      window.APP_CONFIG = { ENV: "default", FEATURES: {} };

secretEnv:
  enabled: false
  # when using External Secrets Operator, this block may be ignored.
  data: {}

externalSecret:
  enabled: false
  refreshInterval: 1h
  secretStoreRef:
    name: default
    kind: ClusterSecretStore
  target:
    name: spc-secret-env
  data: [] # list of { secretKey: "API_KEY", remoteRef: { key: "path/in/secret/store", property: "API_KEY" } }

nginxExporter:
  enabled: false
  image: nginx/nginx-prometheus-exporter:1.3.0
  port: 9113
  args:
    - -nginx.scrape-uri=http://127.0.0.1:80/stub_status

readinessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10
  failureThreshold: 6

livenessProbe:
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 15
  periodSeconds: 20
  failureThreshold: 3

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution: []
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 50
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: [spc-analysis-tool]
          topologyKey: kubernetes.io/hostname

nodeSelector: {}

tolerations: []

priorityClassName: ""

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s

rbac:
  create: true

limitRange:
  enabled: false
  default:
    cpu: 500m
    memory: 256Mi
  defaultRequest:
    cpu: 50m
    memory: 64Mi

resourceQuota:
  enabled: false
  hard:
    requests.cpu: "2"
    requests.memory: 1Gi
    limits.cpu: "4"
    limits.memory: 2Gi
    pods: "20"

